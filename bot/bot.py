from telegram.ext import Updater, CommandHandler, PollHandler
import requests
import json
from news import get_news
from trends import get_trends
from blog import save_draft

BOT_TOKEN = "7884645795:AAHSdUVQXkaX3iuCb3sTMl2iNGnQtLTWYwI"  # –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Ç–æ–∫–µ–Ω —ñ–∑ @BotFather
CHANNEL_ID = "@HyperballoidAIArt"
X_TOKEN = "YOUR_X_TOKEN"  # –ó–∞–º—ñ–Ω–∏ –Ω–∞ Bearer Token —ñ–∑ developer.x.com
NEWSAPI_KEY = "YOUR_NEWSAPI_KEY"  # –ó–∞–º—ñ–Ω–∏ –Ω–∞ –∫–ª—é—á —ñ–∑ newsapi.org
WP_URL = "YOUR_WORDPRESS_URL"  # –ó–∞–º—ñ–Ω–∏, —è–∫—â–æ —î WordPress (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, myblog.wordpress.com)
WP_AUTH = ("username", "password")  # –ó–∞–º—ñ–Ω–∏ –¥–ª—è WordPress

def start(update, context):
    lang = update.message.from_user.language_code
    if lang.startswith("uk"):
        update.message.reply_text(
            "–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç @HyperballoidAIArt. –ö–æ–º–∞–Ω–¥–∏:\n"
            "/guide - –ì–∞–π–¥–∏ (AI, NFT, VR)\n/nft - –ú–æ—ó NFT\n/news - –ù–æ–≤–∏–Ω–∏\n"
            "/trends - –¢—Ä–µ–Ω–¥–∏\n/poll - –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è\n/giveaway - –†–æ–∑—ñ–≥—Ä–∞—à\n"
            "/challenge - –ß–µ–ª–µ–Ω–¥–∂\n/prompt - –ü—Ä–æ–º–ø—Ç –¥–ª—è Leonardo.ai\n"
            "/draft - –ß–µ—Ä–Ω–µ—Ç–∫–∞ —Å—Ç–∞—Ç—Ç—ñ\n/publish - –ü–æ—à–∏—Ä–µ–Ω–Ω—è\n/collab - –ö–æ–ª–∞–±–æ—Ä–∞—Ü—ñ—ó\n"
            "/contest - –ö–æ–Ω–∫—É—Ä—Å–∏"
        )
    else:
        update.message.reply_text(
            "Hi! I'm @HyperballoidAIArt‚Äôs bot. Commands:\n"
            "/guide - Guides (AI, NFT, VR)\n/nft - My NFTs\n/news - News\n"
            "/trends - Trends\n/poll - Poll\n/giveaway - Raffle\n"
            "/challenge - Challenge\n/prompt - Leonardo.ai prompt\n"
            "/draft - Article draft\n/publish - Share\n/collab - Collabs\n"
            "/contest - Contests"
        )

def guide(update, context):
    lang = update.message.from_user.language_code
    topic = context.args[0] if context.args else "ai"
    guides_en = {
        "ai": "üé® AI Art Guide:\n1. Go to leonardo.ai\n2. Use /prompt\n3. Mint on Binance (/buy)",
        "nft": "üí∏ NFT Guide:\n1. Join Binance NFT\n2. Mint with /nft\n3. Promote with /publish",
        "vr": "üï∂Ô∏è VR Guide:\n1. Try Spatial.io\n2. Upload NFT\n3. Share with /vr"
    }
    guides_uk = {
        "ai": "üé® –ì–∞–π–¥ –∑ AI-–∞—Ä—Ç—É:\n1. –ó–∞–π–¥–∏ –Ω–∞ leonardo.ai\n2. –°–ø—Ä–æ–±—É–π /prompt\n3. –ú—ñ–Ω—Ç–∏ –Ω–∞ Binance (/buy)",
        "nft": "üí∏ –ì–∞–π–¥ –∑ NFT:\n1. –ü—Ä–∏—î–¥–Ω–∞–π—Å—è –¥–æ Binance NFT\n2. –ú—ñ–Ω—Ç–∏ –∑ /nft\n3. –ü—Ä–æ—Å—É–≤–∞–π –∑ /publish",
        "vr": "üï∂Ô∏è –ì–∞–π–¥ –∑ VR:\n1. –°–ø—Ä–æ–±—É–π Spatial.io\n2. –ó–∞–≤–∞–Ω—Ç–∞–∂ NFT\n3. –ü–æ–¥—ñ–ª–∏—Å—å –∑ /vr"
    }
    guides = guides_uk if lang.startswith("uk") else guides_en
    update.message.reply_text(guides.get(topic, "Use /guide ai, /guide nft, or /guide vr"))

def nft(update, context):
    lang = update.message.from_user.language_code
    caption = "–ú—ñ–π –æ—Å—Ç–∞–Ω–Ω—ñ–π NFT! –ú—ñ–Ω—Ç–∏: https://www.binance.com/en/nft" if lang.startswith("uk") else "My latest NFT! Mint: https://www.binance.com/en/nft"
    update.message.reply_photo(
        "https://hyperballoid.github.io/assets/nft/nft_1.png",
        caption=caption
    )

def news(update, context):
    lang = update.message.from_user.language_code
    try:
        articles = get_news(NEWSAPI_KEY)
        response = "\n".join(f"üì∞ {a['title']}: {a['url']}" for a in articles)
        if lang.startswith("uk"):
            update.message.reply_text(f"–û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏ AI-–∞—Ä—Ç—É:\n{response}")
        else:
            update.message.reply_text(f"Latest AI art news:\n{response}")
    except Exception as e:
        update.message.reply_text("–ü–æ–º–∏–ª–∫–∞ –Ω–æ–≤–∏–Ω. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ." if lang.startswith("uk") else "News error. Try later.")

def trends(update, context):
    lang = update.message.from_user.language_code
    trends = get_trends()
    response = ", ".join(trends)
    if lang.startswith("uk"):
        update.message.reply_text(f"üî• –¢—Ä–µ–Ω–¥–∏: {response}")
    else:
        update.message.reply_text(f"üî• Trends: {response}")

def poll(update, context):
    lang = update.message.from_user.language_code
    question = "–Ø–∫–∏–π —Å—Ç–∏–ª—å NFT –Ω–∞—Å—Ç—É–ø–Ω–∏–π?" if lang.startswith("uk") else "Which NFT style next?"
    update.message.reply_poll(
        question=question,
        options=["Cyberpunk", "Anime", "Abstract"],
        is_anonymous=False
    )

def giveaway(update, context):
    lang = update.message.from_user.language_code
    text = "üéÅ –í–∏–≥—Ä–∞–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π NFT! –ü—ñ–¥–ø–∏—à–∏—Å—å –Ω–∞ @HyperballoidAIArt —ñ –∑—Ä–æ–±–∏ —Ä–µ–ø–æ—Å—Ç —É X!" if lang.startswith("uk") else "üéÅ Win a free NFT! Follow @HyperballoidAIArt and retweet on X!"
    update.message.reply_text(text)

def challenge(update, context):
    lang = update.message.from_user.language_code
    text = "üèÜ –ß–µ–ª–µ–Ω–¥–∂: –°—Ç–≤–æ—Ä–∏ AI-–∞—Ä—Ç —ñ–∑ /prompt —ñ –ø–æ–∑–Ω–∞—á @HyperballoidAIArt!" if lang.startswith("uk") else "üèÜ Challenge: Create AI art with /prompt and tag @HyperballoidAIArt!"
    update.message.reply_text(text)

def prompt(update, context):
    lang = update.message.from_user.language_code
    topic = " ".join(context.args) or "cyberpunk Kyiv"
    prompt_text = f"{topic}, neon lights, 3000x3000px"
    if lang.startswith("uk"):
        update.message.reply_text(f"–ü—Ä–æ–º–ø—Ç –¥–ª—è Leonardo.ai: '{prompt_text}'")
    else:
        update.message.reply_text(f"Leonardo.ai prompt: '{prompt_text}'")

def draft(update, context):
    lang = update.message.from_user.language_code
    topic = " ".join(context.args) or "AI art trends"
    try:
        save_draft(topic)
        if lang.startswith("uk"):
            update.message.reply_text(f"–ß–µ—Ä–Ω–µ—Ç–∫—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {topic}. –ü–µ—Ä–µ–≤—ñ—Ä blog/{topic.replace(' ', '_')}.md")
        else:
            update.message.reply_text(f"Draft saved: {topic}. Check blog/{topic.replace(' ', '_')}.md")
    except Exception as e:
        update.message.reply_text("–ü–æ–º–∏–ª–∫–∞ —á–µ—Ä–Ω–µ—Ç–∫–∏. –°–ø—Ä–æ–±—É–π —â–µ." if lang.startswith("uk") else "Draft error. Try again.")

def publish(update, context):
    lang = update.message.from_user.language_code
    platform = context.args[0] if context.args else "all"
    topic = context.user_data.get("topic", "AI art update")
    message = f"–ù–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è AI-–∞—Ä—Ç—É! –ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å: https://t.me/HyperballoidAIArt #NFTart" if lang.startswith("uk") else f"New AI art update! Join: https://t.me/HyperballoidAIArt #NFTart"
    
    try:
        if platform in ("tg", "all"):
            requests.post(
                f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage",
                data={"chat_id": CHANNEL_ID, "text": message}
            )
        if platform in ("x", "all"):
            requests.post(
                "https://api.twitter.com/2/tweets",
                headers={"Authorization": f"Bearer {X_TOKEN}"},
                json={"text": message}
            )
        if platform in ("wp", "all"):
            requests.post(
                f"{WP_URL}/wp-json/wp/v2/posts",
                auth=WP_AUTH,
                json={"title": topic, "content": message, "status": "publish"}
            )
        update.message.reply_text("–û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ!" if lang.startswith("uk") else "Published!")
    except Exception as e:
        update.message.reply_text("–ü–æ–º–∏–ª–∫–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó." if lang.startswith("uk") else "Publish error.")

def collab(update, context):
    lang = update.message.from_user.language_code
    text = "ü§ù –ö–æ–ª–∞–±–æ—Ä–∞—Ü—ñ—ó: –ó–Ω–∞–π—à–æ–≤ @AIArtistX –Ω–∞ X –¥–ª—è NFT-–ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞!" if lang.startswith("uk") else "ü§ù Collabs: Found @AIArtistX on X for NFT partnership!"
    update.message.reply_text(text)

def contest(update, context):
    lang = update.message.from_user.language_code
    text = "üèÖ –ö–æ–Ω–∫—É—Ä—Å: NFT-—á–µ–ª–µ–Ω–¥–∂ –Ω–∞ ArtStation, –¥–µ–¥–ª–∞–π–Ω 1 —Ç—Ä–∞–≤–Ω—è. –ü–æ–¥–∞–π —á–µ—Ä–µ–∑ /nft!" if lang.startswith("uk") else "üèÖ Contest: NFT challenge on ArtStation, deadline May 1. Submit via /nft!"
    update.message.reply_text(text)

def main():
    updater = Updater(BOT_TOKEN, use_context=True, request_kwargs={'read_timeout': 10, 'connect_timeout': 10})
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("guide", guide))
    dp.add_handler(CommandHandler("nft", nft))
    dp.add_handler(CommandHandler("news", news))
    dp.add_handler(CommandHandler("trends", trends))
    dp.add_handler(CommandHandler("poll", poll))
    dp.add_handler(CommandHandler("giveaway", giveaway))
    dp.add_handler(CommandHandler("challenge", challenge))
    dp.add_handler(CommandHandler("prompt", prompt))
    dp.add_handler(CommandHandler("draft", draft))
    dp.add_handler(CommandHandler("publish", publish))
    dp.add_handler(CommandHandler("collab", collab))
    dp.add_handler(CommandHandler("contest", contest))
    updater.start_polling(poll_interval=1.0, timeout=10, clean=True)
    updater.idle()

if __name__ == "__main__":
    main()
